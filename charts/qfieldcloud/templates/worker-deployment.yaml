{{- if .Values.worker.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "qfieldcloud.fullname" . }}-worker
  labels:
    {{- include "qfieldcloud.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
  serviceName: {{ include "qfieldcloud.fullname" . }}-worker
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      {{- include "qfieldcloud.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        {{- include "qfieldcloud.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: worker
    spec:
      serviceAccountName: {{ include "qfieldcloud.serviceAccountName" . }}
      initContainers:
        - name: download-transformation-grids
          image: k3rnelpan1c/alpine-wget:latest
          command: 
            - /bin/sh
            - -c
            - |
              wget --mirror {{ .Values.qgis.transformationGrids.sourceUrl }} -P /transformation_grids --no-host-directories
              chmod a+r /transformation_grids/*
          volumeMounts:
            - name: transformation-grids
              mountPath: /transformation_grids
      containers:
        - name: worker
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          command:
            - python
            - manage.py
            - dequeue
          env:
            - name: DJANGO_ALLOWED_HOSTS
              value: {{ .Values.django.settings.allowedHosts | quote }}
            - name: DJANGO_SETTINGS_MODULE
              value: {{ .Values.django.settings.settingsModule | quote }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "qfieldcloud.fullname" . }}-django
                  key: secret-key
            - name: DEBUG
              value: {{ .Values.django.settings.debug | quote }}
            - name: ENVIRONMENT
              value: {{ .Values.django.settings.environment | quote }}
            - name: SENTRY_DSN
              value: {{ .Values.django.sentry.dsn | quote }}
            - name: SENTRY_RELEASE
              value: {{ .Values.django.sentry.release | quote }}
            - name: SENTRY_ENVIRONMENT
              value: {{ .Values.django.settings.environment | quote }}
            - name: SENTRY_SAMPLE_RATE
              value: {{ .Values.django.sentry.sampleRate | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.database.name | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.database.user | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "qfieldcloud.fullname" . }}-database
                  key: password
            - name: POSTGRES_HOST
              value: {{ .Values.database.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.database.port | quote }}
            - name: POSTGRES_SSLMODE
              value: {{ .Values.database.sslMode | quote }}
            - name: MINIO_API_PORT
              value: {{ .Values.django.storage.minioApiPort | quote }}
            - name: MINIO_BROWSER_PORT
              value: {{ .Values.django.storage.minioBrowserPort | quote }}
            - name: STORAGES
              value: {{ .Values.django.storage.storagesConfig | toJson | quote }}
            - name: STORAGES_PROJECT_DEFAULT_STORAGE
              value: {{ .Values.django.storage.projectDefaultStorage | quote }}
            - name: GEODB_HOST
              value: {{ .Values.geodatabase.host | quote }}
            - name: GEODB_PORT
              value: {{ .Values.geodatabase.port | quote }}
            - name: GEODB_USER
              value: {{ .Values.geodatabase.user | quote }}
            - name: GEODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "qfieldcloud.fullname" . }}-geodatabase
                  key: password
            - name: GEODB_DB
              value: {{ .Values.geodatabase.name | quote }}
            - name: ACCOUNT_EMAIL_VERIFICATION
              value: {{ .Values.django.settings.accountEmailVerification | quote }}
            - name: QFIELDCLOUD_SUBSCRIPTION_MODEL
              value: {{ .Values.django.settings.subscriptionModel | quote }}
            - name: QFIELDCLOUD_AUTH_TOKEN_EXPIRATION_HOURS
              value: {{ .Values.django.settings.authTokenExpirationHours | quote }}
            - name: QFIELDCLOUD_USE_I18N
              value: {{ .Values.django.settings.useI18n | quote }}
            - name: QFIELDCLOUD_DEFAULT_LANGUAGE
              value: {{ .Values.django.settings.defaultLanguage | quote }}
            - name: QFIELDCLOUD_DEFAULT_TIME_ZONE
              value: {{ .Values.django.settings.defaultTimeZone | quote }}
            - name: QFIELDCLOUD_QGIS_IMAGE_NAME
              value: {{ .Values.qgis.image.repository }}:{{ .Values.qgis.image.tag }}
            - name: QFIELDCLOUD_WORKER_QFIELDCLOUD_URL
              value: {{ .Values.django.settings.workerQfieldcloudUrl | quote }}
            - name: QFIELDCLOUD_HOST
              value: {{ (index .Values.ingress.hosts 0).host | quote }}
            - name: QFIELDCLOUD_QGIS_SERVICE_URL
              value: "http://localhost:8000"  # QGIS service is available on localhost
          volumeMounts:
            - name: transformation-grids
              mountPath: /transformation_grids
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
        - name: qgis
          image: "{{ .Values.qgis.image.repository }}:{{ .Values.qgis.image.tag }}"
          imagePullPolicy: {{ .Values.qgis.image.pullPolicy }}
          command:
            - python
            - -m
            - qfc_worker
          env:
            - name: PROJ_DOWNLOAD_DIR
              value: "/transformation_grids"
            - name: QT_QPA_PLATFORM
              value: "offscreen"
          volumeMounts:
            - name: transformation-grids
              mountPath: /transformation_grids
          resources:
            {{- toYaml .Values.qgis.resources | nindent 12 }}
      volumes:
        - name: transformation-grids
          {{- if .Values.persistence.transformationGrids.enabled }}
          persistentVolumeClaim:
            claimName: transformation-grids-{{ .Release.Name }}-worker-$(POD_NAME)
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            type: Socket
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: transformation-grids
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.persistence.transformationGrids.storageClass }}
        storageClassName: {{ .Values.persistence.transformationGrids.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.transformationGrids.size | quote }}
{{- end }} 